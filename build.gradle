

//  ______         __ __     __   ______ __               __              
// |   __ \.--.--.|__|  |.--|  | |   __ \  |.--.--.-----.|__|.-----.-----.
// |   __ <|  |  ||  |  ||  _  | |    __/  ||  |  |  _  ||  ||     |__ --|
// |______/|_____||__|__||_____| |___|  |__||_____|___  ||__||__|__|_____|
//                                                |_____|
// ____________________________________________________________________________
//

buildscript { 
    repositories { jcenter() }
    dependencies { classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3' }
}

plugins {
    id 'idea'
    id 'eclipse'
    id 'io.werval.application' version '0.7.0'
    id 'org.asciidoctor.convert' version '1.5.2'
}

apply plugin: 'lesscss'


//
//  ____                    _             _
// |    \ ___ ___ ___ ___ _| |___ ___ ___|_|___ ___
// |  |  | -_| . | -_|   | . | -_|   |  _| | -_|_ -|
// |____/|___|  _|___|_|_|___|___|_|_|___|_|___|___|
//           |_|
// ____________________________________________________________________________
//

configurations {
    assets
}
dependencies {

    assets "org.webjars:angularjs:1.2.25"
    assets "org.webjars:bootstrap:3.0.3"
    assets "org.webjars:jquery:2.1.1"
    assets "org.webjars:marked:0.3.2-1"

    compile werval.module( 'liquibase' )
    compile werval.module( 'jpa' )
    compile werval.module( 'json' )
    compile werval.module( 'rythm' )
    compile "org.hibernate:hibernate-validator:5.0.3.Final"

    runtime 'ch.qos.logback:logback-classic:1.1.2'
    runtime 'org.jsoup:jsoup:1.8.1'
    runtime "org.glassfish:javax.el:3.0.0"
    runtime "com.h2database:h2:1.4.178"
    runtime "org.postgresql:postgresql:9.3-1101-jdbc41"

    testCompile "com.jayway.restassured:rest-assured:2.4.0"
    testCompile "org.fluentlenium:fluentlenium-festassert:0.10.3"
    testCompile 'org.seleniumhq.selenium:selenium-java:2.45.0'

}


//  _____             _
// |  _  |___ ___ ___| |_ ___
// |     |_ -|_ -| -_|  _|_ -|
// |__|__|___|___|___|_| |___|
// ____________________________________________________________________________
//

task extractWebJars( type: Copy ) {
    inputs.file 'build.gradle'
    configurations.assets.files.each {
        from zipTree( it ).matching {
            include 'META-INF/resources/webjars/**'
        }
    }
    eachFile {
        it.path = it.path.replaceAll( 'META-INF/resources/webjars/', '' )
    }
    into 'build/webjars'
}

task concatJs( dependsOn: extractWebJars ) {
    inputs.dir 'src/main/assets/js'
    inputs.dir 'build/webjars'
    outputs.dir 'build/concatJs'
    doLast {
        ant.concat( destfile: 'build/concatJs/js/main.js' ) {
            fileset( file: 'build/webjars/marked/0.3.2/marked.js' )
            fileset( file: 'build/webjars/jquery/2.1.1/jquery.js' )
            fileset( file: 'build/webjars/bootstrap/3.0.3/js/bootstrap.js' )
            fileset( file: 'build/webjars/angularjs/1.2.25/angular.js' )
            fileset( file: 'build/webjars/angularjs/1.2.25/angular-route.js' )
            fileset( file: 'build/webjars/angularjs/1.2.25/angular-sanitize.js' )
            fileset( file: 'src/main/assets/js/main.js' )
        }
    }
}
task prepareLessFiles( type: Copy, dependsOn: extractWebJars ) {
    from 'build/webjars/bootstrap/3.0.3/less'
    from 'src/main/assets/less/main.less'
    into 'build/less'
}

lesscss {
    source = fileTree( 'build/less' ) {
        include 'main.less'
    }
    dest = 'build/css/css'
    compress = true
}
task optimizeCss( type: de.obqo.gradle.lesscss.LessTask, dependsOn: prepareLessFiles ) { }

task copyFonts( type: Copy, dependsOn: extractWebJars ) {
    from 'build/webjars/bootstrap/3.0.3/fonts'
    into 'build/fonts/fonts'
}

task copyAssets( type: Copy, dependsOn: [ concatJs, optimizeCss, copyFonts ] ) {
    from 'build/concatJs'
    from 'build/css'
    from 'build/fonts'
    into 'build/generated-src/assets/resources/assets'
}

processResources.dependsOn copyAssets
sourceSets.main.resources.srcDir file( "build/generated-src/assets/resources" )


//
//  _____ _ _ _ _     _
// |     |_| | | |___| |_
// |  |  | | | | | -_| . |
// |__  _|_|_____|___|___|
//    |__|
// ____________________________________________________________________________
//

devshell.extraWatch += [ "src/main/assets", "src/main/web" ]


//
//  ____                            _       _   _
// |    \ ___ ___ _ _ _____ ___ ___| |_ ___| |_|_|___ ___
// |  |  | . |  _| | |     | -_|   |  _| .'|  _| | . |   |
// |____/|___|___|___|_|_|_|___|_|_|_| |__,|_| |_|___|_|_|
// ____________________________________________________________________________
//

asciidoctor {
    baseDir = file( 'src/doc' )
    sourceDir = file( 'src/doc' )
    outputDir = file( 'build/generated-src/asciidoc/resources/beerdb/doc' )
    backends = [ 'html5' ]
    separateOutputDirs = false
    options = [
        compact: true
    ]
    attributes = [
        'toc': 'right',
        'linkattrs': '',
        'linkcss':'',
        'source-highlighter': 'coderay', 'coderay-css': 'class',
        'werval-version': wervalVersion
    ]
    doLast {
        copy {
            from 'src/doc'
            into 'build/generated-src/asciidoc/resources/beerdb/doc'
            excludes += [ '**/*.asciidoc', '**/*.adoc', '**/*.asc', '**/*.ad' ]
        }
    }
}
processResources.dependsOn asciidoctor
sourceSets.main.resources.srcDir file( "build/generated-src/asciidoc/resources" )


//
//  ______              __                 __              
// |   __ \.---.-.----.|  |--.---.-.-----.|__|.-----.-----.
// |    __/|  _  |  __||    <|  _  |  _  ||  ||     |  _  |
// |___|   |___._|____||__|__|___._|___  ||__||__|__|___  |
//                                 |_____|          |_____|
// ____________________________________________________________________________
//

applicationName = 'beerdb'
