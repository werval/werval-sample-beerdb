
app {
    
    # The mandatory application secret
    secret = "48e6d0aea6b561e42d03e7d2430a729d0af672e5215ee3154728097f20a9603f"
    
    # Custom Global object
    global = "beerdb.Global"
    
    # Plugins
    plugins.enabled = [ liquibase, jpa, json, rythm ]

    # This application does blocking database I/O in controllers
    # We need a big thread pool to prevent blocking the I/O threads.
    executors.werval_app_executor.count = 32
}


jdbc {
    default_datasource = beerdb
    datasources.beerdb {

        # Use in-memory H2 Database
        driver = "org.h2.Driver"
        url = "jdbc:h2:mem:beerdb;DB_CLOSE_DELAY=-1;MVCC=TRUE"
        user = "sa"
        password = "sa"

        # Publish the DataSource into JNDI so JPA can use it directly
        jndiName = "BeerDBDataSource"

        # Make the connection pool size the same as http executors
        maxConnectionsPerPartition = 32
        maximumPoolSize = 32
    }
}

jpa.default_pu = beerdb
